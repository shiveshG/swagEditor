{"version":3,"sources":["component/editor.jsx","App.js","serviceWorker.js","index.js"],"names":["SwagEditor","state","player","frame","position","px","py","canvasY","canvasX","start","rounded","cornerValue","customSize","scaleSize","backgroundColor","textColor","imageSize","x","y","custom","handle","e","target","name","value","parseInt","setState","playerUpdate","sizehandle","val","size","customSizeHandle","document","getElementById","handleFrame","src","sizeImg","Math","min","clearCanvas","getContext","clearRect","playerSelect","download_img","addBackground","image","toDataURL","href","roundedCorner","ctx","beginPath","arc","PI","clip","closePath","img","charAt","length","drawImage","imageSmoothingEnabled","addFrame","addPlayer","this","canvas","width","height","console","log","inputId","imgId","input","files","reader","FileReader","onload","result","readAsDataURL","customStyle","color","className","style","fill","xmlns","viewBox","d","type","id","onChange","imageImportFunction","alt","onClick","download","maxWidth","transformOrigin","zIndex","top","transform","marginLeft","placeholder","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.be10fa2d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass SwagEditor extends Component {\r\n  state = {\r\n    player: 0,\r\n    frame: 0,\r\n    position: \"top\",\r\n    px: 0,\r\n    py: 0,\r\n    canvasY: 400,\r\n    canvasX: 400,\r\n    start: true,\r\n    rounded: false,\r\n    cornerValue: 0,\r\n    customSize: false,\r\n    scaleSize: 100,\r\n    backgroundColor: 'pink',\r\n    textColor: 'white',\r\n  };\r\n  imageSize = {\r\n    \"Logo cover\": { x: 500, y: 500 },\r\n    \"Instagram Post\": { x: 1080, y: 1080 },\r\n    \"Phone Wallpaper\": { x: 1080, y: 1920 },\r\n    \"Social Media\": { x: 1080, y: 1080 },\r\n    \"Desktop Wallpaper\": { x: 1920, y: 1080 },\r\n    \"Facebook Cover\": { x: 2050, y: 780 },\r\n    custom: { x: 500, y: 500 },\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.clearCanvas();\r\n    const { canvasX, canvasY } = this.state;\r\n    var canvas = document.getElementById(\"backgroundCanvas\");\r\n    canvas.width = canvasX;\r\n    canvas.height = canvasY;\r\n    console.log(\"assa\")\r\n  }\r\n  componentDidUpdate() {\r\n    const { canvasX, canvasY, start } = this.state;\r\n    var canvas = document.getElementById(\"backgroundCanvas\");\r\n    canvas.width = canvasX;\r\n    canvas.height = canvasY;\r\n    start && this.setState({ start: false });\r\n    this.addBackground();\r\n  }\r\n\r\n  handle = (e) => {\r\n    let { name, value } = e.target;\r\n    if (name !== \"position\") {\r\n      value = parseInt(value) * 10 + 500;\r\n    }\r\n    this.setState({ [name]: value }, () => {\r\n      this.playerUpdate();\r\n    });\r\n  };\r\n\r\n  sizehandle = (val) => {\r\n    val = val.target.value;\r\n    if (val === \"custom\") {\r\n      this.setState({ customSize: true });\r\n      return;\r\n    }\r\n    const size = this.imageSize[val];\r\n    this.setState({ canvasY: size.y, canvasX: size.x, scaleSize: (size.x > 600 && 50) || (size.y > 600 && 50) });\r\n  };\r\n\r\n  customSizeHandle = () => {\r\n    const x = document.getElementById(\"customX\").value;\r\n    const y = document.getElementById(\"customY\").value;\r\n    this.setState({\r\n      canvasX: x < 60 ? 500 : x,\r\n      canvasY: y < 60 ? 500 : y,\r\n      customSize: false,\r\n    });\r\n  };\r\n\r\n  handleFrame = (e) => {\r\n    let { name, value } = e.target;\r\n    document.getElementById(\r\n      name\r\n    ).src = `./assests/img/background/bg (${value}).png`;\r\n    this.setState({ frame: value });\r\n  };\r\n\r\n  playerUpdate = () => {\r\n    const { position, canvasY, canvasX } = this.state;\r\n    const sizeImg = (Math.min(canvasX, canvasY) * 20) / 100;\r\n    let px, py;\r\n    let x = canvasX - sizeImg,\r\n      y = canvasY - sizeImg;\r\n    if (position === \"top\") {\r\n      px = x / 2;\r\n      py = 0;\r\n    } else if (position === \"left\") {\r\n      px = 0;\r\n      py = y / 2;\r\n    } else if (position === \"right\") {\r\n      px = x;\r\n      py = y / 2;\r\n    } else if (position === \"bottom\") {\r\n      px = x / 2;\r\n      py = y;\r\n    } else if (position === \"topLeft\") {\r\n      px = 0;\r\n      py = 0;\r\n    } else if (position === \"topRight\") {\r\n      px = x;\r\n      py = 0;\r\n    } else if (position === \"bottomLeft\") {\r\n      px = 0;\r\n      py = y;\r\n    } else if (position === \"bottomRight\") {\r\n      px = x;\r\n      py = y;\r\n    } else if (position === \"center\") {\r\n      px = x / 2;\r\n      py = y / 2;\r\n    }\r\n    this.setState({ px, py });\r\n  };\r\n\r\n  clearCanvas = () => {\r\n    const { canvasX, canvasY } = this.state;\r\n    const canvas = document.getElementById(\"backgroundCanvas\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvasX, canvasY);\r\n  };\r\n\r\n  imageImportFunction(inputId, imgId) {\r\n    const input = document.getElementById(inputId);\r\n    if (input.files && input.files[0]) {\r\n      var reader = new FileReader();\r\n      reader.onload = function (e) {\r\n        document.getElementById(imgId).src = e.target.result;\r\n      };\r\n      reader.readAsDataURL(input.files[0]);\r\n    }\r\n  }\r\n\r\n  playerSelect = (e) => {\r\n    let { name, value } = e.target;\r\n    document.getElementById(\r\n      name\r\n    ).src = `./assests/img/players/player (${value}).svg`;\r\n    this.setState({ player: value });\r\n  };\r\n\r\n  download_img = (e) => {\r\n    this.addBackground();\r\n    var canvas = document.getElementById(\"backgroundCanvas\");\r\n    var image = canvas.toDataURL(\"image/png\");\r\n    e.target.href = image;\r\n\r\n  };\r\n\r\n  roundedCorner = () => {\r\n    const { canvasX, canvasY } = this.state;\r\n    var canvas = document.getElementById(\"backgroundCanvas\");\r\n    var ctx = canvas.getContext(\"2d\");\r\n    ctx.beginPath();\r\n    ctx.arc(canvasX / 2, canvasY / 2, canvasX / 2, 0, 2 * Math.PI);\r\n    ctx.clip();\r\n    // ctx.stroke();\r\n    ctx.closePath();\r\n    return true;\r\n  };\r\n\r\n  addBackground = () => {\r\n    const { canvasX, canvasY, rounded } = this.state;\r\n    this.clearCanvas();\r\n    var canvas = document.getElementById(\"backgroundCanvas\");\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var img = document.getElementById(\"backgoundImg\");\r\n    rounded && this.roundedCorner();\r\n\r\n    const src = img.src.charAt(img.src.length - 1);\r\n    src !== \"#\" &&\r\n      ctx.drawImage(img, 0, 0, canvasX, canvasY);\r\n    ctx.imageSmoothingEnabled = false;\r\n    this.addFrame();\r\n    return true;\r\n  };\r\n\r\n  addFrame = () => {\r\n    const { canvasX, canvasY } = this.state;\r\n    var canvas = document.getElementById(\"backgroundCanvas\");\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var img = document.getElementById(\"frameImg\");\r\n    const src = img.src.charAt(img.src.length - 1);\r\n    src !== \"#\" &&\r\n      ctx.drawImage(img, 0, 0, canvasX, canvasY);\r\n    this.addPlayer();\r\n    return true;\r\n  };\r\n\r\n  addPlayer = () => {\r\n    const { px, py, canvasX, canvasY } = this.state;\r\n    var canvas = document.getElementById(\"backgroundCanvas\");\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var img = document.getElementById(\"playerImg\");\r\n    let src = img.src.charAt(img.src.length - 1);\r\n    const sizeImg = (Math.min(canvasX, canvasY) * 20) / 100;\r\n    src !== \"#\" &&\r\n      ctx.drawImage(img, px, py, sizeImg, sizeImg);\r\n    return true;\r\n  };\r\n\r\n  render() {\r\n    const { start, customSize, scaleSize, backgroundColor, textColor } = this.state;\r\n    const customStyle = [\r\n      {\r\n        backgroundColor: backgroundColor, color: textColor\r\n      }\r\n    ]\r\n    return (\r\n      <div>\r\n        {/* <div>\r\n          <label>Theme</label>\r\n          <div><label>background : </label>  <input type=\"color\" onChange={(e) => this.setState({ backgroundColor: e.target.value })} /></div>\r\n          <div><label>Text Color : </label>  <input type=\"color\" onChange={(e) => this.setState({ textColor: e.target.value })} /></div>\r\n\r\n        </div> */}\r\n        <div className=\"p-4 px-2 w-screen min-h-screen relative text-center\" style={customStyle[0]}>\r\n          <section className=\"flex justify-center p-4 py-6\">\r\n            <img src=\"./assests/aliando-rocky.regular.png\" />\r\n          </section>\r\n          <section className=\"flex flex-col md:flex-row flex-wrap justify-center\">\r\n            {/* file background */}\r\n\r\n            <section className=\"flex justify-between bg-red-400\">\r\n\r\n              <span className=\"bg-red-600 p-3 w-full\">Select a file</span>\r\n              <label className=\"bg-red-400 hoverBg flex flex-col items-center px-4 py-2 bg-transparent  cursor-pointer outline-none focus:outline-none  hover:text-blue-100\">\r\n                <svg\r\n                  className=\"w-8 h-8\"\r\n                  fill=\"currentColor\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 20 20\"\r\n                >\r\n                  <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\r\n                </svg>\r\n                <input\r\n                  className=\"hidden\"\r\n                  type=\"file\"\r\n                  id=\"backgrounduploade\"\r\n                  onChange={() => {\r\n                    this.imageImportFunction(\r\n                      \"backgrounduploade\",\r\n                      \"backgoundImg\"\r\n                    );\r\n                  }}\r\n                />\r\n                <img\r\n                  id=\"backgoundImg\"\r\n                  src=\"#\"\r\n                  alt=\"Your background\"\r\n                  className=\"hidden\"\r\n                />\r\n              </label>\r\n\r\n            </section>\r\n\r\n            <section className=\"flex justify-between bg-red-400\">\r\n              {/* Players */}\r\n\r\n\r\n              <span className=\"bg-red-600 p-3\">Players</span>\r\n              <select\r\n                onChange={this.playerSelect}\r\n                name=\"playerImg\"\r\n                className=\" bg-red-400 p-3\"\r\n              >\r\n                <option value=\"1\">Bhuvneshwar </option>\r\n                <option value=\"2\">Hardik</option>\r\n                <option value=\"3\">Hardik-2</option>\r\n                <option value=\"4\">Jasprit</option>\r\n                <option value=\"5\">Kieron </option>\r\n                <option value=\"6\">Rohit </option>\r\n                <option value=\"7\">Rohit-2</option>\r\n                <option value=\"8\">Shikhar </option>\r\n                <option value=\"9\">Virat </option>\r\n                <option value=\"10\">Yuvraj </option>\r\n              </select>\r\n\r\n\r\n              {/* frames */}\r\n              <div className=\"flex bg-red-400 hoverBg\">\r\n                <label className=\"flex flex-col items-center px-4 py-2  bg-transparent  cursor-pointer outline-none focus:outline-none  hover:text-blue-100\">\r\n                  <svg\r\n                    className=\"w-8 h-8\"\r\n                    fill=\"currentColor\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 20 20\"\r\n                  >\r\n                    <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\r\n                  </svg>\r\n                  <input\r\n                    className=\"hidden\"\r\n                    type=\"file\"\r\n                    id=\"playerUploade\"\r\n                    onChange={() => {\r\n                      this.imageImportFunction(\"playerUploade\", \"playerImg\");\r\n                    }}\r\n                  />\r\n                </label>\r\n              </div>\r\n              <img\r\n                id=\"playerImg\"\r\n                src=\"./assests/img/players/player (1).svg\"\r\n                alt=\"Your Player\"\r\n                className=\"hidden\"\r\n              />\r\n            </section>\r\n\r\n            <section className=\"flex justify-between bg-red-400\">\r\n              {/* frames */}\r\n\r\n              <span className=\"bg-red-600 p-3 w-40\">Swag frames</span>\r\n              <select\r\n                onChange={this.handleFrame}\r\n                name=\"frameImg\"\r\n                className=\" bg-red-400  p-3 select:bg-red-600 customselect\"\r\n              >\r\n                <option value=\"1\">Frame1</option>\r\n                <option value=\"2\">Frame2</option>\r\n\r\n              </select>\r\n\r\n              <div className=\" flex\">\r\n                {/* <div className=\"flex bg-red-400 hover:bg-red-800\">\r\n                  <label className=\"flex flex-col items-center px-4 py-2  bg-transparent  cursor-pointer outline-none focus:outline-none  hover:text-blue-100\">\r\n                    <svg\r\n                      className=\"w-8 h-8\"\r\n                      fill=\"currentColor\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 20 20\"\r\n                    >\r\n                      <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\r\n                    </svg>\r\n                    <input\r\n                      className=\"hidden\"\r\n                      type=\"file\"\r\n                      id=\"frameUploade\"\r\n                      onChange={() => {\r\n                        this.imageImportFunction(\"frameUploade\", \"frameImg\");\r\n                      }}\r\n                    />\r\n                  </label>\r\n                </div> */}\r\n                <img id=\"frameImg\" src=\"./assests/img/background/bg (1).png\" alt=\"Your frame\" className=\"hidden\" />\r\n              </div>\r\n\r\n            </section>\r\n\r\n            <section className=\"flex justify-between bg-red-400\">\r\n              {/* Player Position */}\r\n\r\n              <span className=\"bg-red-600 p-3 w-40\">Player Position</span>\r\n              <select\r\n                onChange={this.handle}\r\n                name=\"position\"\r\n                className=\"bg-red-400  p-3 select:bg-red-600 customselect\"\r\n              >\r\n                <option value=\"top\">Top</option>\r\n                <option value=\"left\">Left</option>\r\n                <option value=\"right\">Right</option>\r\n                <option value=\"bottom\">Bottom</option>\r\n                <option value=\"topLeft\">TopLeft</option>\r\n                <option value=\"topRight\">TopRight</option>\r\n                <option value=\"bottomLeft\">BottomLeft</option>\r\n                <option value=\"bottomRight\">BottomRight</option>\r\n                <option value=\"center\">Center</option>\r\n              </select>\r\n            </section>\r\n\r\n            <section className=\"flex justify-between bg-red-400\">\r\n              {/* Post type */}\r\n              <span className=\"bg-red-600 p-3\">Post type</span>\r\n              <select\r\n                onChange={this.sizehandle}\r\n                name=\"position\"\r\n                className=\"bg-red-400 p-3\"\r\n              >\r\n                <option value=\"Logo cover\">Logo</option>\r\n                <option value=\"Instagram Post\">Instagram Post</option>\r\n                <option value=\"Phone Wallpaper\">Phone Wallpaper</option>\r\n                <option value=\"Social Media\">Social Media</option>\r\n                <option value=\"Desktop Wallpaper\">Desktop Wallpaper</option>\r\n                <option value=\"Facebook Cover\">Facebook Cover</option>\r\n                <option value=\"custom\">custom</option>\r\n              </select>\r\n            </section>\r\n\r\n          </section>\r\n\r\n\r\n\r\n\r\n          {/* <section className=\"flex \">\r\n            <div className=\"bg-red-400 flex justify-between \">\r\n              <select\r\n                name=\"position\"\r\n                className=\" bg-red-400  p-3 select:bg-red-600 customselect\"\r\n                onChange={(e) => {\r\n                  this.setState({ rounded: e.target.value === \"true\" });\r\n                }}\r\n              >\r\n                <option value=\"false\">Rectangle</option>\r\n                <option value=\"true\">Circle</option>\r\n              </select>\r\n            </div>\r\n          </section> */}\r\n\r\n          <section className=\"my-4 text-left ml-4 ml-12\">\r\n            <a\r\n              className=\"bg-red-600 px-4 py-2 hover:shadow-lg hoverBg\"\r\n              id=\"download\"\r\n              onClick={this.download_img}\r\n              download=\"myImage.jpg\"\r\n              href=\"#\"\r\n            >\r\n              Download\r\n            </a>\r\n\r\n            <input\r\n              className=\"bg-red-400 font-sm  p-2 hover:shadow-lg hoverBg\"\r\n              type=\"button\"\r\n              onClick={() => {\r\n                start && this.setState({ start: false });\r\n                this.addBackground();\r\n              }}\r\n              value={start ? \"Add Design\" : \"Update Design\"}\r\n            />\r\n\r\n\r\n          </section>\r\n\r\n          <section\r\n            id=\"canvas\"\r\n            className={`relative overflow-scroll mx-auto transform md:scale-${scaleSize}`}\r\n            style={{ maxWidth: \"100%\", width: \"fit-content\", transformOrigin: \"0 0\" }}\r\n          >\r\n            <canvas\r\n              className={`border-2`}\r\n\r\n              id=\"backgroundCanvas\"\r\n              style={{\r\n                zIndex: 1,\r\n                top: \"100px\",\r\n              }}\r\n            >\r\n              This text is displayed if your browser does not support HTML5\r\n              Canvas.\r\n            </canvas>\r\n          </section>\r\n\r\n\r\n        </div>\r\n\r\n        {customSize && (\r\n          <div\r\n            className=\"absolute bg-white py-2 px-6 top-0 mx-auto  text-black z-50\"\r\n            style={{ transform: \"translate(-50%, 0px)\", marginLeft: \"50%\" }}\r\n          >\r\n            <div className=\"relative\">\r\n              <p className=\"text-center font-medium text-gray-500\">\r\n                Custom dimensions\r\n            </p>\r\n              <span className=\"absolute font-medium right-0 text-gray-600 top-0 cursor-pointer\" onClick={() => this.setState({\r\n                customSize: false,\r\n              })}>\r\n                X\r\n            </span></div>\r\n            <div className=\"flex \">\r\n              <span className=\"border-2 m-2  p-2 rounded\">\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"width\"\r\n                  className=\"w-full\"\r\n                  style={{ width: \"70px\", height: \"30px\" }}\r\n                  id=\"customX\"\r\n                />\r\n              </span>\r\n              <span className=\"border-2 m-2  p-2 rounded\">\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"height\"\r\n                  className=\"w-full\"\r\n                  style={{ width: \"70px\", height: \"30px\" }}\r\n                  id=\"customY\"\r\n                />\r\n              </span>\r\n              <span className=\"  border-2 m-2 p-3 font-medium rounded\">\r\n                px\r\n              </span>\r\n            </div>\r\n            <div className=\"w-full\">\r\n              <input\r\n                type=\"button\"\r\n                value=\"Submit\"\r\n                className=\"border-2 bg-red-600 px-3 py-1  w-full m-2 text-white my-4 rounded\"\r\n                onClick={() => {\r\n                  this.customSizeHandle();\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SwagEditor;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport SwagEditor from \"./component/editor\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SwagEditor />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}